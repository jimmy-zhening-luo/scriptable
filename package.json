{
  "$pkg": "2411.2.0",
  "$schema": "https://json.schemastore.org/package",
  "$help": "https://docs.npmjs.com/cli/configuring-npm/package-json",
  "name": "@scoping/scriptable",
  "version": "43.1.2",
  "repository": "github:jimmy-zhening-luo/scriptable",
  "description": "Write type-safe, concise, continuously-deployed Scriptable apps. Scriptable for iOS and iPadOS lets users author JavaScript procedures invokable by Apple Shortcuts, Share Sheet or Widgets, useful for home and device automation.",
  "keywords": [
    "scriptable",
    "ios",
    "ipados",
    "iphone",
    "ipad",
    "apple",
    "shortcuts",
    "widget",
    "automation",
    "typescript"
  ],
  "license": "MIT",
  "private": true,
  "engineStrict": true,
  "engines": {
    "node": "^24",
    "npm": "^11"
  },
  "type": "module",
  "devDependencies": {
    "@babel/core": "^7.28.5",
    "@babel/plugin-transform-runtime": "^7.28.5",
    "@babel/preset-env": "^7.28.5",
    "@babel/preset-typescript": "^7.28.5",
    "@rollup/plugin-babel": "^6.1.0",
    "@rollup/plugin-node-resolve": "^16.0.3",
    "@types/chai": "^5.2.3",
    "@types/mocha": "^10.0.10",
    "@types/scriptable-ios": "^1.7.8",
    "chai": "^6.2.0",
    "linted": "33.4.0",
    "mocha": "^11.7.4",
    "rexreplace": "^7.1.13",
    "rollup": "^4.52.5",
    "ts-add-js-extension": "^1.6.6",
    "typescript": "^5.9.3"
  },
  "scripts": {
    "clean": "cmd --% /c \"for %G in (declaration dist dist-tests build) do (if exist %G rmdir /s /q %G) & for %G in (.eslintcache) do (if exist %G del /f /q %G)\" || rm -rf declaration dist dist-tests build .eslintcache",
    "build": "npm run build:ts",
    "build:ts": "tsc -b src",
    "build:svelte": "svelte-kit sync && svelte-check && vite build",
    "postbuild:ts": "ts-add-js-extension --showprogress=false --dir=dist",
    "postbuild": "npm run lint || exit 0",
    "lint": "eslint --cache --fix",
    "pretest": "npm run build",
    "test": "npm run --if-present test:suite",
    "test:suite": "tsc -b tests && ts-add-js-extension --showprogress=false --dir=dist-tests && mocha",
    "predeploy": "npm run clean && npm run --ignore-scripts build && npm test --ignore-scripts",
    "deploy": "npm run deploy:pack && npm run deploy:rebuild && npm run deploy:rr",
    "deploy:pack": "npm run deploy:pack:clean && npm run deploy:pack:make && npm run deploy:pack:copy && npm run deploy:pack:unbuild",
    "deploy:pack:clean": "cmd --% /c if exist packed rmdir /s /q packed || rm -rf packed",
    "deploy:pack:make": "mkdir packed",
    "deploy:pack:copy": "cmd --% /c xcopy /e /k /h /i \"./dist\" \"packed\" || cp -r dist/* packed",
    "deploy:pack:unbuild": "cmd --% /c \"for %G in (core lib private) do rmdir /s /q packed\\%G\" || rm -rf packed/core packed/lib packed/private",
    "deploy:rebuild": "rollup --config && ts-add-js-extension --showprogress=false --dir=packed",
    "deploy:rr": "npm run deploy:rr:header && npm run deploy:rr:resolve && npm run deploy:rr:space",
    "deploy:rr:header": "npm run deploy:rr:header:icon && npm run deploy:rr:header:share && npm run deploy:rr:header:strict",
    "deploy:rr:header:icon": "rr \"^[ \\t]*\\x22 *(?<color>[-a-z]+) +(?<glyph>[-a-z]+) *\\x22[ \t]*;[ \t]*\\n(?<rest>.+)$\" \"// Variables used by Scriptable.\\n// These must be at the very top of the file. Do not edit.\\n// icon-color: €<color>; icon-glyph: €<glyph>;\\n€<rest>\" -uI -GMs \"packed/*.js\" -BHq",
    "deploy:rr:header:share": "rr \"^(?<header_icon>\\/\\/ Variables used by Scriptable.\\n\\/\\/ These must be at the very top of the file. Do not edit.\\n\\/\\/ icon-color: [-a-z]+; icon-glyph: [-a-z]+;\\n)[ \\t]*\\x22 *(?<share>[-a-z]+(?:, [-a-z]+){0,3}) *\\x22[ \t]*;[ \t]*\\n(?<rest>.+)$\" \"€<header_icon>// share-sheet-inputs: €<share>;\\n€<rest>\" -uI -GMs \"packed/*.js\" -BHq",
    "deploy:rr:header:strict": "rr \"^\\s*(?:\\(?[ \\t]*[\\x22\\x27\\x60] *use +strict *[\\x22\\x27\\x60][ \\t]*\\)?[ \\t]*;[ \\t]*\\n)?\\s*(?<header>(?:\\/\\/ [\\S ]+\\n)*)\\s*(?<rest>.+)$\" \"€<header>\\x22use strict\\x22;\\n€<rest>\" -uI -GMs \"packed/**/*.js\" -BHq",
    "deploy:rr:resolve": "npm run deploy:rr:resolve:import && npm run deploy:rr:resolve:export:default && npm run deploy:rr:resolve:export:named",
    "deploy:rr:resolve:import": "rr \"\\bimport\\s*(?<imports>\\b\\w+|\\{\\s*\\w+\\s*(?:,\\s*\\w+\\s*)*,?\\s*\\})\\s*\\bfrom\\s+(?<module>\\S.*\\S)\\s*;\" \"const €<imports> = importModule(€<module>);\" -uI \"packed/**/*.js\" -BHq",
    "deploy:rr:resolve:export:default": "rr \"^(?<indent>[ \\t]*)export[ \\t]+default[ \\t]+\" \"€<indent>module.exports = \" -uI \"packed/**/*.js\" -BHq",
    "deploy:rr:resolve:export:named": "rr \"^(?<indent>[ \\t]*)export[ \\t]+(?<type_space>(?:(?:const|let|var|class|function)\\s)?)[ \\t]*(?<export>\\w+)\" \"€<indent>module.exports.€<export> = €<type_space>€<export>\" -uI \"packed/**/*.js\" -BHq",
    "deploy:rr:space": "npm run deploy:rr:space:outdent && npm run deploy:rr:space:sandbox",
    "deploy:rr:space:outdent": "rr \"^(?<half>(?:  )*|(?:\\t)*)\\k<half>\" \"€<half>\" -uI \"packed/{,app/**/,lib/**/,private/**/}*.js\" -BHq",
    "deploy:rr:space:sandbox": "rr \"(?<indent>[ \\t]*)async[ \\t]+runtime[ \\t]*\\(\\)[ \\t]*\\{\\s*\\}\" \"€<indent>async runtime() {\\n€<indent>  \\n€<indent>}\" -uI -GMs \"packed/*.js\" -BHq"
  },
  "author": "Jimmy Zhening Luo <jimmy-zhening-luo@users.noreply.github.com> (https://jimm.my/)"
}
